Index: TeamCode/src/main/java/org/firstinspires/ftc/teamcode/movement/Motors.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.firstinspires.ftc.teamcode.movement;\r\n\r\n\r\nimport com.qualcomm.robotcore.eventloop.opmode.OpMode;\r\n\r\nimport org.firstinspires.ftc.robotcore.external.navigation.AngleUnit;\r\nimport org.firstinspires.ftc.robotcore.external.navigation.AxesOrder;\r\nimport org.firstinspires.ftc.robotcore.external.navigation.AxesReference;\r\nimport org.firstinspires.ftc.teamcode.res.Hardware;\r\n\r\npublic class Motors {\r\n\r\n    static double offset = 0;\r\n    private final Hardware hardware;\r\n    private final OpMode opMode;\r\n\r\n    public Motors(Hardware hardware) {\r\n        this.hardware = hardware;\r\n        opMode = hardware.opMode;\r\n    }\r\n\r\n\r\n    /**\r\n     * does all of the field centric calculations\r\n     * @return the corrected Joystick values\r\n     */\r\n    private double[] fieldCentric() {\r\n        double x1 = opMode.gamepad1.left_stick_x;\r\n        double y1 = -opMode.gamepad1.left_stick_y;\r\n        double x2 = -y1 * Math.sin(-getAngle()) + x1 * Math.cos(-getAngle());\r\n        double y2 = y1 * Math.cos(-getAngle()) + x1 * Math.sin(-getAngle());\r\n        double rotation = opMode.gamepad1.right_trigger - opMode.gamepad1.left_trigger;\r\n        if (opMode.gamepad1.dpad_up) gyroReset();\r\n\r\n        return new double[]{x2, y2, rotation};\r\n    }\r\n\r\n    /**\r\n     * resets the gyro\r\n     */\r\n    private void gyroReset() {\r\n        offset = hardware.imu.getAngularOrientation(AxesReference.INTRINSIC, AxesOrder.ZYX, AngleUnit.RADIANS).firstAngle;\r\n    }\r\n\r\n\r\n    /**\r\n     * enables joystick drive control on the robot\r\n     */\r\n    public void drive() {\r\n        double[] values = fieldCentric();\r\n\r\n        double x = values[0], y = values[1], r = values[2];\r\n\r\n        final double lfPower = y + x + r;\r\n        final double rfPower = y - x - r;\r\n        final double lbPower = y - x + r;\r\n        final double rbPower = y + x - r;\r\n        final double highestPower =\r\n                Math.max(\r\n                        Math.abs(lfPower), Math.max(\r\n                                Math.abs(rfPower), Math.max(\r\n                                        Math.abs(lbPower), Math.max(\r\n                                                Math.abs(rbPower), 1)\r\n                                )\r\n                        )\r\n                );\r\n\r\n        if (highestPower > 1) {\r\n            hardware.lf.setPower(lfPower / highestPower);\r\n            hardware.rf.setPower(rfPower / highestPower);\r\n            hardware.rb.setPower(rbPower / highestPower);\r\n            hardware.lb.setPower(lbPower / highestPower);\r\n        } else {\r\n            hardware.lf.setPower(lfPower);\r\n            hardware.rf.setPower(rfPower);\r\n            hardware.rb.setPower(rbPower);\r\n            hardware.lb.setPower(lbPower);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * getter for the gyro angle in radians.\r\n     * from -Pi - Pi\r\n     * @return gyro angle\r\n     */\r\n    public double getAngle() {\r\n        return wrap(hardware.imu.getAngularOrientation(AxesReference.INTRINSIC, AxesOrder.ZYX, AngleUnit.RADIANS).firstAngle - offset);\r\n    }\r\n\r\n    private double wrap(double angle) {\r\n        final double wrapped = angle % (2 * Math.PI);\r\n        if (wrapped > Math.PI) {\r\n            return wrapped - (2 * Math.PI);\r\n        } else if (wrapped < -Math.PI) {\r\n            return wrapped + (Math.PI * 2);\r\n        } else {\r\n            return wrapped;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
===================================================================
diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/movement/Motors.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/movement/Motors.java
--- a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/movement/Motors.java	
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/movement/Motors.java	
@@ -97,6 +97,4 @@
             return wrapped;
         }
     }
-
-
 }
